<#
.SYNOPSIS
     Provisions Shared/Equipment/Room mailboxes.

.DESCRIPTION
     Connects to EXO and checks if requested mailbox already exists, and if so, exits. Otherwise creates requested mailbox
     
.Inputs

.Outputs
     N/A

.Link

.NOTES
     Generated On:  25/08/2020
     Last Modified: 23/09/2020
     Generated By: Brendan Joyce (BJ)

     ==============================
     Start Changelog
     ==============================
     V1.0 BJ
     -    Created initial script
     -    Added in Sleep for 30mins to allow for syncing to happen before migration batch is completed.
     -    Included prompt for requested email address
     -    Modified to exclude migration and -shared switch can be used since exchange CU
     V2.0 GN
     -    Modified replace operator to include additional special characters to be ommited from email alias
          
     ==============================
     End Changelog
     ==============================
#>



Function Get-Password {
    $length = 12
    $nonAlphaChars = 5
    [System.Web.Security.Membership]::GeneratePassword($length,$nonAlphaChars)
    }
    
Function Connect-HYB ($ExchangeServer) {
    $HYBcreds = Get-Credential "$env:USERDOMAIN\$env:USERNAME" -Message "Enter Housing Admin Credentials"
    $HYBSession = New-PSSession -ConfigurationName Microsoft.Exchange -ConnectionUri "http://$ExchangeServer/PowerShell/" -Authentication Kerberos -Credential $HYBcreds
    Import-PSSession $HYBSession -Prefix HYB -AllowClobber
    }

$DNSResult = Get-Random (Resolve-DnsName smtp-internal.communities.wa.gov.au)
$ExchangeServer = (Resolve-DnsName $DnsResult.IPAddress).NameHost
$SessionNames = (Get-PSSession).computername
$DomainController = 'HO-AZU-DC04.dhw.wa.gov.au'

If (!($SessionNames -like 'outlook.office365.com')){
Connect-ExchangeOnline
}

If (!($SessionNames -like '*.dhw.wa.gov.au')){
Connect-HYB ($ExchangeServer)
}

Write-Host "!!!BETA VERSION BECAUSE SD LIKE SPECIAL CHARACTERS!!!" -ForegroundColor Yellow -BackgroundColor Black

$MailboxType = Read-Host "Is this mailbox Shared, Room, or Equipment?"

If ($MailboxType -eq 'Shared'){
    $SharedDisplayname = Read-Host "Please enter Mailbox Display name"
    $RequestedSMTPAddress = Read-Host "Please enter requested Primary SMTP (ending with @communities)"
    $SharedAlias = $SharedDisplayname -replace '[-!#$%^&*(){}" "]',""

    If ($RequestedSMTPAddress -notlike '*@communities.wa.gov.au'){
        Write-Host "SMTP address needs to end in @communities.wa.gov.au" -ForegroundColor Red -BackgroundColor Black
        exit
    }
        If ((Get-Recipient $SharedDisplayname -ErrorAction SilentlyContinue) -or (Get-Recipient $SharedAlias -ErrorAction SilentlyContinue))
        {
                Write-Host "This mailbox already exists in Exchange Online" -BackgroundColor Black -ForegroundColor Red
                Write-Host "Display name: $SharedDisplayName" -ForegroundColor Yellow -BackgroundColor Black
                Write-host "Alias: $SharedAlias" -ForegroundColor Yellow -BackgroundColor Black
                exit
        }

    $Password = ConvertTo-SecureString -String (Get-Password) -AsPlainText -Force
    $SharedOrganisationalUnit = 'OU=Shared,OU=Mailboxes,OU=Communities,DC=dhw,DC=wa,DC=gov,DC=au'
    $SharedPrimarySMTPAddress = $RequestedSMTPAddress

    New-HYBRemoteMailbox -Shared -Name $SharedDisplayname -Displayname $SharedDisplayname -Alias $SharedAlias -OnPremisesOrganizationalUnit $SharedOrganisationalUnit -PrimarySMTPAddress $SharedPrimarySMTPAddress -Password $Password -DomainController $DomainController
    Set-HYBRemoteMailbox $SharedAlias -UserPrincipalName "$SharedAlias@communities.wa.gov.au" -DomainController $DomainController
    Set-HYBRemoteMailbox $SharedAlias -EmailAddressPolicyEnabled $True -DomainController $DomainController

    Write-Host "Mailbox $SharedDisplayname created" -ForegroundColor Green -BackgroundColor Black

}

If ($MailboxType -eq 'Room'){
    $RoomDisplayname = Read-Host "Please enter Mailbox Display name"
    $RequestedSMTPAddress = Read-Host "Please enter requested Primary SMTP (ending with @communities)"
    $RoomAlias = $RoomDisplayname -replace '[-!#$%^&*(){}" "]',""

    If ($RequestedSMTPAddress -notlike '*@communities.wa.gov.au'){
        Write-Host "SMTP address needs to end in @communities.wa.gov.au" -ForegroundColor Red -BackgroundColor Black
        exit
    }
        If ((Get-Recipient $RoomDisplayname -ErrorAction SilentlyContinue) -or (Get-Recipient $RoomAlias -ErrorAction SilentlyContinue))
        {
                Write-Host "This mailbox already exists in Exchange Online" -BackgroundColor Black -ForegroundColor Red
                Write-Host "Display name: $RoomDisplayname" -ForegroundColor Yellow -BackgroundColor Black
                Write-host "Alias: $RoomAlias" -ForegroundColor Yellow -BackgroundColor Black
                exit
        }

    $Password = ConvertTo-SecureString -String (Get-Password) -AsPlainText -Force
    $RoomOrganisationalUnit = 'OU=Room,OU=Mailboxes,OU=Communities,DC=dhw,DC=wa,DC=gov,DC=au'

    New-HYBRemoteMailbox -Room -Name $RoomDisplayname -Displayname $RoomDisplayname -Alias $RoomAlias -OnPremisesOrganizationalUnit $RoomOrganisationalUnit -PrimarySMTPAddress $RequestedSMTPAddress -Password $Password -DomainController $DomainController
    Set-HYBRemoteMailbox $RoomAlias -UserPrincipalName $RequestedSMTPAddress -DomainController $DomainController
    Set-HYBRemoteMailbox $RoomAlias -EmailAddressPolicyEnabled $True -DomainController $DomainController

    Write-Host "Mailbox $RoomDisplayname created" -ForegroundColor Green -BackgroundColor Black

}

If ($MailboxType -eq 'Equipment'){
    $EquipmentDisplayname = Read-Host "Please enter Mailbox Display name"
    $RequestedSMTPAddress = Read-Host "Please enter requested Primary SMTP (ending with @communities)"
    $EquipmentAlias = $EquipmentDisplayname -replace '[-!#$%^&*(){}" "]',""

    If ($RequestedSMTPAddress -notlike '*@communities.wa.gov.au'){
        Write-Host "SMTP address needs to end in @communities.wa.gov.au" -ForegroundColor Red -BackgroundColor Black
        exit
    }
        If ((Get-Recipient $EquipmentDisplayname -ErrorAction SilentlyContinue) -or (Get-Recipient $EquipmentAlias -ErrorAction SilentlyContinue))
        {
                Write-Host "This mailbox already exists in Exchange Online" -BackgroundColor Black -ForegroundColor Red
                Write-Host "Display name: $EquipmentDisplayname" -ForegroundColor Yellow -BackgroundColor Black
                Write-host "Alias: $EquipmentAlias" -ForegroundColor Yellow -BackgroundColor Black
                exit
        }
    $Password = ConvertTo-SecureString -String (Get-Password) -AsPlainText -Force
    $EquipmentOrganisationalUnit = 'OU=Equipment,OU=Mailboxes,OU=Communities,DC=dhw,DC=wa,DC=gov,DC=au'
    $EquipmentPrimarySMTPAddress = "$EquipmentAlias@communities.wa.gov.au"

    New-HYBRemoteMailbox -Equipment -Name $EquipmentDisplayname -Displayname $EquipmentDisplayname -Alias $EquipmentAlias -OnPremisesOrganizationalUnit $EquipmentOrganisationalUnit -PrimarySMTPAddress $EquipmentPrimarySMTPAddress -Password $Password -DomainController $DomainController
    Set-HYBRemoteMailbox $EquipmentAlias -UserPrincipalName "$EquipmentAlias@communities.wa.gov.au" -DomainController $DomainController
    Set-HYBRemoteMailbox $EquipmentAlias -EmailAddressPolicyEnabled $True -DomainController $DomainController

    Write-Host "Mailbox $EquipmentDisplayname created" -ForegroundColor Green -BackgroundColor Black

}